services:
  nginx:
    build: ./nginx
    ports:
      - 1337:80  # Exposes Nginx on port 1337
    depends_on:
      - web
      - frontend  # Ensure frontend is up before Nginx
    volumes:
      - media_volume:/usr/src/djangobnb_backend/media  # For backend media files
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro  # Mount custom Nginx config
    networks:
      - app-network

  web:
    build: ./backend/djangobnb_backend
    command: gunicorn djangobnb_backend.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - ./djangobnb_backend/:/usr/src/djangobnb_backend/
      - media_volume:/usr/src/djangobnb_backend/media
    expose:
      - 8000
    env_file:
      - ./.env.prod
    depends_on:
      - db
    networks:
      - app-network

  daphne:
    build: ./djangobnb_backend
    command: daphne --bind 0.0.0.0 -p 8002 djangobnb_backend.asgi:application
    expose:
      - 8002
    networks:
      - app-network

  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=postgresuser
      - POSTGRES_PASSWORD=postgrespassword
      - POSTGRES_DB=djangobnb
    networks:
      - app-network

  frontend:
    build: ./frontend  # Assuming the Next.js app is in the frontend directory
    environment:
      - NODE_ENV=production  # Ensures the build is optimized for production
    ports:
      - 3000:3000  # Expose frontend on port 3000
    depends_on:
      - web  # Backend must be available for API requests
    networks:
      - app-network